stages:
  - infosec
  - standards
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  GIT_STRATEGY: fetch
  CONTAINER_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH

before_script:
  - set -e

Deploy Release:
  image: registry.gitlab.jak.guru:5005/devops/docker:nodejs10-latest
  stage: deploy
  environment:
    name: release
  only:
    variables:
      - $CI_COMMIT_REF_NAME == $RELEASE_IN_TESTING
  before_script:
    - set -e
    - apt-get install libpng16-dev -y
  script:
    - echo '"use strict";exports.config={app_name:["Bastion"],license_key:"'"$NEW_RELIC_LICENSE"'",logging:{level:"info"},allow_all_headers:!0,attributes:{exclude:["request.headers.cookie","request.headers.authorization","request.headers.proxyAuthorization","request.headers.setCookie*","request.headers.x*","response.headers.cookie","response.headers.authorization","response.headers.proxyAuthorization","response.headers.setCookie*","response.headers.x*"]},ignore_status_codes:"404,400,401,503"};' > ./newrelic.js
    - echo "$CI_COMMIT_REF_NAME" > ./version.txt
    - npm install
    - npm run build-production
    - source <(curl -s --user gitlab-ci-token:"$CI_JOB_ID" "https://gls.jak.guru/api/deploy?project=$CI_PROJECT_ID&environment=$CI_ENVIRONMENT_SLUG")

Deploy Production:
  image: registry.gitlab.jak.guru:5005/devops/docker:nodejs10-latest
  stage: deploy
  environment:
    name: production
  only:
    - tags
  before_script:
    - set -e
    - OLDDIR=$PWD
    - rm -rf /builds/recloned/
    - git clone "$CI_REPOSITORY_URL" /builds/recloned/
    - cd /builds/recloned
    - BRANCH=$(git branch --contains $CI_COMMIT_TAG | grep -o master)
    - echo "${BRANCH}"
    - if [ "${BRANCH}" != "master" ]; then exit 1; fi
    - cd "$OLDDIR"
    - apt-get install libpng16-dev -y
  script:
    - echo '"use strict";exports.config={app_name:["Bastion"],license_key:"'"$NEW_RELIC_LICENSE"'",logging:{level:"info"},allow_all_headers:!0,attributes:{exclude:["request.headers.cookie","request.headers.authorization","request.headers.proxyAuthorization","request.headers.setCookie*","request.headers.x*","response.headers.cookie","response.headers.authorization","response.headers.proxyAuthorization","response.headers.setCookie*","response.headers.x*"]},ignore_status_codes:"404,400,401,503"};' > ./newrelic.js
    - echo "$CI_COMMIT_TAG" > ./version.txt
    - npm install
    - npm run build-production
    - source <(curl -s --user gitlab-ci-token:"$CI_JOB_ID" "https://gls.jak.guru/api/deploy?project=$CI_PROJECT_ID&environment=$CI_ENVIRONMENT_SLUG")